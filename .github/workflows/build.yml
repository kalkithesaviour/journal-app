name: SonarQube Cloud
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "zulu"
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-v1
          restore-keys: |
            ${{ runner.os }}-sonar-v1
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '**/build.gradle', '**/settings.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-
            ${{ runner.os }}-
      - name: Build and analyze
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          JAVA_EMAIL: ${{ secrets.JAVA_EMAIL }}
          JAVA_EMAIL_PASSWORD: ${{ secrets.JAVA_EMAIL_PASSWORD }}
          KAFKA_SERVERS: ${{ secrets.KAFKA_SERVERS }}
          KAFKA_USERNAME: ${{ secrets.KAFKA_USERNAME }}
          KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORG: ${{ secrets.SONAR_ORG }}
          SONAR_URL: ${{ secrets.SONAR_URL }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY
